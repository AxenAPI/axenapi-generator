/**
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.3.0).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package config;

import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.context.annotation.Bean;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.kafka.support.converter.MessagingMessageConverter;
import service.KafkaSenderService;
import service.impl.KafkaSenderServiceImpl;
import org.springframework.context.annotation.ComponentScan;

@ComponentScan("axenapi")
public class KafkaSenderServiceConfig {

    private final KafkaTemplate<String, Object> kafkaTemplate;

    public KafkaSenderServiceConfig(KafkaTemplate<String, Object> kafkaTemplate) {
        this.kafkaTemplate = kafkaTemplate;
    }

    @Bean
    @ConditionalOnMissingBean
    public MessagingMessageConverter converter() {
        MessagingMessageConverter converter = new MessagingMessageConverter();
        converter.setGenerateMessageId(true);
        converter.setGenerateTimestamp(true);
        return converter;
    }

    @Bean
    @ConditionalOnMissingBean
    public KafkaSenderService kafkaSenderService(MessagingMessageConverter converter) {
        return new KafkaSenderServiceImpl(kafkaTemplate, converter);
    }
}
